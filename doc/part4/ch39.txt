【39.1:　Ubuntuでlocaleを追加する方法】

日付：　2017.01.08
参考：　http://dqn.sakusakutto.jp/2013/03/ubuntu_locale.html
コメント：

	ubuntuでlocaleを追加するためにには、上記記事のように行う

	①登録されているlocaleの確認

		$ locale -a
		$ grep ja /usr/share/i18n/SUPPORTED

	②localeの追加

		$ sudo locale-gen fr_FR.UTF-8


【39.1:　en_USとrf_FR間での日付変換の問題】

日付：　2017.01.04
バージョン：　g++ (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609
コメント：

	以下の問題があり、テキストの例のようなロール間変換は困難

	①en_US、fr_FRともtime_get::date_order（）がno_orderを返すため、
	operator<<(ostream&,Date)、operator>>(istream&,Date)演算子関数内で
	動的に日付フォーマットを変更・特定することができない

	②fr_FRでは、日付読み出し時に、%eが正しく、１桁の日付（月の中の日）を
	読みだすことができない。

	以上から、日付のフォーマットはen_US,fr_FRとも"%b %d %Y"固定とした

	

【39.4.1:　collate.compare()が異常終了】

日付：　2017.01.04
バージョン：　g++ (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609
コメント：

	コード例で、優先ロケールと、en_US.UTF-8ロケールで、compare関数を
	実行すると、プログラムが終了する（exit値が-1）


【39.4.3.1:　My_money_ioの通貨記号が出力されない】

日付：　2017.01.04
バージョン：　g++ (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609
コメント：

	My_meny_io特性をデフォルトロケールに設定して、Moneyデータを出力した時、
	通貨記号　"USD"が出力されない


【39.4.4.1:　time_put::putのフォーマット引数指定の誤り】

日付：　2017.01.08
バージョン：　g++ (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609
コメント：

	コード例で、time_put::putのフォーマット指定子の終了がNULを含む文字配列
	の末尾を指しているため、フォーマット文字列にNULが含まれる（NULLが出力される）

	char fmt[] ="%b %e %Y";
	use_facet<time_put<char>>(os.getloc()).put(os,os,' ',&t,begin(fmt),end(fmt));
		↓
	use_facet<time_put<char>>(os.getloc()).put(os,os,' ',&t,begin(fmt),end(fmt)-1);


【39.4.4.2:　get_dateが日付を読み出せない】

日付：　2017.01.04
バージョン：　g++ (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609
コメント：

	以下の問題があり、get_dateが日付を読みだすことができない

	①get_date呼出し後のエラー判定で、iostatus変数にeofbitがセットされるため、
	if(!err)の判定を通過しない。以下のように修正

		use_facet<time_get<char>>(is.getloc()).get_date(is,0,is,err,&t);
		if (err==0 || err==ios_base::eofbit){
			Month m = static_cast<Month>(t.tm_mon+1);
			d = Date(t.tm_mday, m, t.tm_year+1900);
		}

	②入力文字列が、"10/4/1980"では、月が読み出せない。以下のように修正

		stringstream ss ("10/04/1980");


【39.4.6:　Cvt_to_upperが動作しない】

日付：　2017.01.05、2017.01.06
バージョン：　g++ (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609
コメント：

	cinにcodecvt特性項目を設定しても、do_inがコールバックされない
	ifstreamにcodecvtを設定すると、正しく動作する

	locale ulocale(locale(), new Cvt_to_upper);

	cin.imbue(ulocale);
	for (char ch; cin>>ch; )
		cout << ch;

	ifstream ifs("test.txt");
	ifs.imbue(ulocale);
	for (char ch; ifs>>ch; )
		cout << ch;


【39.4.7:　My_messagesのメッセージテーブル構築処理に誤り】

日付：　2017.01.05、2017.01.06
バージョン：　g++ (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609
コメント：

	My_messagesのメッセージテーブル構築処理に誤りがある。
	od_openメソッドにおいて、forルールの条件の、f>>s　は、
	行末の改行記号をストリームに残すので、最初のメッセージが空となる


	for(string s; f>>s && s=="<<<"; ) {
		c.sets.push_back(Set{});
		Set& ss = c.sets.back();
		while (getline(f,s) && s != ">>>")
			ss.msgs.push_back(s);
	}

		↓

	for(string s; getline(f,s) && s=="<<<"; ) {
		・・・
	}
