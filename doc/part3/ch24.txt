【24.4.2.:　Equality_comparableとTotally_orderedの説明内容が逆】

日付：　2016.10.23
バージョン：　gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 5.3.0
コメント：
	Equality_comparableとTotally_orderedの説明内容が逆となっている
	テキストのコードでそれらを入れ替えるべき


【24.4.5.:　テンプレート別名を特殊化することはできない】

日付：　2016.10.29、2017.06.25
バージョン：　gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 5.3.0
バージョン：　g++ (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609
コメント：

	Forwardに対するValue_type型を宣言するため、テンプレート別名の特殊化を
	利用しているが、言語上、許されていない。
	
		// cannot specialize alias-template
		template<typename Val>
		using Value_type<Forward<Val>> = Val;
			// error: expected '=' before '<' token

	ここでは、Forwardをiteratorから発生させることで対応
	（iterator内で、value_typeなどのメンバ型が定義される）
	
		template<typename Val>
		//struct Forward {
		struct Forward : public std::iterator<std::forward_iterator_tag, Val> {
			Val v;
			Forward() = default;
			Forward(const Forward&) = default;
			Forward& operator=(const Forward&) = default;
			bool operator==(const Forward& o) { return true; }
			bool operator!=(const Forward& o) { return false; }
			void operator++() { }
			Val& operator*() { return v; }
		};

